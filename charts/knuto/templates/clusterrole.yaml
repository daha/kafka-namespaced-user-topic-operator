apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kopf-events
rules:
  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [events.k8s.io]
    resources: [events]
    verbs: [create]
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: knuto-read-secrets
rules:
  # knuto-secrets needs to read secrets from the Strimzi-managed namespace
  - apiGroups: [""]
    resources: [secrets]
    verbs: [list, watch, get, patch]
  # knuto-secrets need to read KafkaUser from the Strimzi-managed namespace
  # in order to read the annotation that tells us which namespace the KafkaUser
  # was copied *from*
  - apiGroups: [kafka.strimzi.io]
    resources: [kafkausers]
    verbs: [get]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: knuto-write-secrets
rules:
  # knuto-secrets needs to write secrets in the production/dev/latest etc namespaces
  - apiGroups: [""]
    resources: [secrets]
    verbs: [get, list, create, patch]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: knuto-kafkauser-read-kafka-user-topic
rules:
  - apiGroups: [kafka.strimzi.io]
    resources: [kafkausers, kafkatopics]
    verbs: [list, get, watch, patch]
---
# knuto-secrets reading kafkauser so it can set ownership on secrets
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: knuto-secrets-read-kafka-user
rules:
  - apiGroups: [kafka.strimzi.io]
    resources: [kafkausers]
    verbs: [get]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: knuto-kafkauser-write-kafka-user-topic
rules:
  - apiGroups: [kafka.strimzi.io]
    resources: [kafkausers, kafkatopics]
    verbs: [list, get, watch, patch, create, delete]
