apiVersion: apps/v1
kind: Deployment
metadata:
  name: knuto-operator-secrets
spec:
  replicas: 1
  strategy:
    # We want exactly one replica running at all times, or we might get race conditions.
    type: Recreate
  selector:
    matchLabels:
      knuto: secrets
  template:
    metadata:
      labels:
        knuto: secrets
        app: knuto
    spec:
      serviceAccountName: knuto-secrets
      containers:
      - name: knuto-secrets
        image: {{ .Values.image }}
        command:
        - knuto-secrets
        - -v
        {{- range $namespace, $config := .Values.kafkauser_source_namespaces }}
        - --kafka-user-topic-source-namespace
        - {{ $namespace }}
        {{- end }}
        {{- range $secret_type, $server := .Values.secret_type_to_bootstrap_server }}
        - --secret-type-to-bootstrap-server
        - {{ $secret_type }}={{ $server }}
        {{- end }}
        - {{ .Values.strimzi_namespace }}
{{ range $namespace, $config := .Values.kafkauser_source_namespaces }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: knuto-operator-kafkaentities-{{ $namespace }}
spec:
  replicas: 1
  strategy:
    # We want exactly one replica running at all times, or we might get race conditions.
    type: Recreate
  selector:
    matchLabels:
      knuto: kafkaentities-{{ $namespace }}
  template:
    metadata:
      labels:
        knuto: kafkaentities-{{ $namespace }}
        app: knuto
    spec:
      serviceAccountName: knuto-kafka-users-topics
      containers:
      - name: knuto-kafkaentities
        image: {{ $.Values.image }}
        command:
        - knuto-kafka-user-topic
        - -v
        - --kafka-user-topic-destination-namespace
        - {{ $.Values.strimzi_namespace }}
        {{- if eq $config.deletion_enabled true }}
        - --enable-topic-deletion
        {{- end }}
        - {{ $namespace }}
{{ end }}

